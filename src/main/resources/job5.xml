<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

    <!--<batch:job-repository id="simpleJobRepository"-->
                          <!--transaction-manager="dataSourceTransactionManager"-->
                          <!--data-source="dataSource"/>-->

    <bean id="simpleJobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
          p:dataSource-ref="dataSource"
          p:transactionManager-ref="dataSourceTransactionManager"
          p:validateTransactionState="false"
          p:databaseType="H2"/>

    <bean class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
          p:jobRepository-ref="simpleJobRepository"/>
    <bean class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>
    <bean class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
          p:dataSource-ref="dataSource"/>
    <bean class="org.springframework.batch.core.launch.support.SimpleJobOperator" autowire="byType"/>

    <bean id="errorCache" class="org.inanme.springbatch.Job5.ErrorCache"/>
    <bean id="myJobExecutionListener" class="org.inanme.springbatch.Job5.MyJobExecutionListener"
          c:cache-ref="errorCache"/>
    <bean id="contextLoader1" class="org.inanme.springbatch.Job5.ExecutionContextLoader" scope="step">
        <constructor-arg>
            <bean class="org.inanme.spring.ConstantStringSupplier" c:value="Message 1"/>
        </constructor-arg>
    </bean>
    <bean id="contextLoader2" class="org.inanme.springbatch.Job5.ExecutionContextLoader" scope="step">
        <constructor-arg>
            <bean class="org.inanme.spring.ConstantStringSupplier" c:value="Message 2"/>
        </constructor-arg>
    </bean>
    <bean id="errorProneStep" class="org.inanme.springbatch.Job5.ErrorProneStep"/>
    <bean id="constantlyFailingStep" class="org.inanme.springbatch.Job5.ConstantlyFailingStep"/>

    <bean id="job5.reader" class="org.inanme.springbatch.Job5.Reader" scope="step"/>
    <bean id="job5.processor" class="org.inanme.springbatch.Job5.Processor" scope="step" c:cache-ref="errorCache"/>
    <bean id="job5.writer" class="org.inanme.springbatch.Job5.Writer" scope="step" c:cache-ref="errorCache"/>

    <batch:job id="job5" job-repository="simpleJobRepository">

        <batch:listeners>
            <batch:listener ref="myJobExecutionListener"/>
        </batch:listeners>

        <batch:step id="job5.contextLoader1" next="job5.contextLoader2">
            <batch:tasklet ref="contextLoader1"
                           transaction-manager="dataSourceTransactionManager"/>
        </batch:step>

        <batch:step id="job5.contextLoader2">
            <batch:tasklet transaction-manager="dataSourceTransactionManager">
                <batch:chunk reader="job5.reader"
                             processor="job5.processor"
                             writer="job5.writer"
                             retry-limit="2"
                             commit-interval="10">
                    <batch:retryable-exception-classes>
                        <batch:include class="org.inanme.springbatch.Job5$TryAgainException"/>
                    </batch:retryable-exception-classes>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>

    </batch:job>

    <batch:job id="job6" job-repository="simpleJobRepository">

        <batch:step id="job6.step1" next="job6.step2" allow-start-if-complete="true">
            <batch:tasklet ref="contextLoader1"
                           transaction-manager="dataSourceTransactionManager"/>
        </batch:step>

        <batch:step id="job6.step2" next="job6.step3">
            <batch:tasklet ref="contextLoader2"
                           transaction-manager="dataSourceTransactionManager"/>
        </batch:step>

        <batch:step id="job6.step3">
            <batch:tasklet ref="errorProneStep"
                           transaction-manager="dataSourceTransactionManager"/>
        </batch:step>

    </batch:job>

    <batch:job id="job7" job-repository="simpleJobRepository">

        <batch:step id="job7.step1">
            <batch:tasklet ref="constantlyFailingStep" start-limit="3"
                           transaction-manager="dataSourceTransactionManager"/>
        </batch:step>

    </batch:job>

</beans>
